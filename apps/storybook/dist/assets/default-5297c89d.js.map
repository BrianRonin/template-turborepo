{"version":3,"file":"default-5297c89d.js","sources":["../../../../packages/ui/src/utils/make-hsl.ts","../../../../packages/ui/src/utils/make-size.ts","../../../../packages/ui/src/styles/theme/default.ts"],"sourcesContent":["export type hslProps = {\n  /**\n   * Length must be an odd number to work correctly\n   */\n  length: number\n  /**\n   * This is the main color, it must be in HSL\n   */\n  color: [number, number, number, number] | string\n  /**\n   * Choose where the main color is in relation to the color palette that will be returned\n   */\n  position?: 'start' | 'middle' | 'end'\n  /**\n   * Setting \"inverse\" to true will invert all orders\n   */\n  inverse?: boolean\n  /**\n   * revert order of matrix\n   */\n  orderMatrix?: boolean\n  /**\n   * reverse order of saturation\n   */\n  orderSaturation?: boolean\n  /**\n   * reverse order of light\n   */\n  orderLight?: boolean\n  /**\n   * reverse order of alpha\n   */\n  orderAlpha?: boolean\n  /**\n   * reverse order of matrix\n   */\n  incMatrix?: number\n  /**\n   * reverse order of saturation\n   */\n  incSaturation?: number\n  /**\n   * increment light\n   */\n  incLight?: number\n  /**\n   * increment alpha\n   */\n  incAlpha?: number\n}\n\nconst withLimit = (\n  value: number,\n  increment: number,\n  limit: number,\n  subtraction = false\n) => {\n  let newLight\n  if (increment > 0) {\n    newLight = subtraction\n      ? value - increment\n      : value + increment\n  } else {\n    newLight = value\n  }\n  newLight = newLight > limit ? limit : newLight\n  newLight = newLight < 0 ? 0 : newLight\n  return String(\n    Number.isInteger(newLight)\n      ? newLight\n      : newLight.toFixed(2)\n  )\n}\n\nconst getMatrix = (\n  hot: boolean,\n  increments: number,\n  current: number\n) => {\n  const after = current >= 250\n  let value\n  if (hot) {\n    value = after\n      ? current + increments\n      : current - increments\n  } else {\n    value = after\n      ? current - increments\n      : current + increments\n  }\n  return String(withLimit(value, 0, 360))\n}\n\nconst extractColorValues = (value: string) => {\n  const [_matrix, _saturation, _light, _alpha] =\n    value.split(',')\n  const filter = (value: string | undefined) =>\n    Number(\n      value ? value.replace(/[^\\d.]/g, '') : '1'\n    )\n  return [\n    filter(_matrix),\n    filter(_saturation),\n    filter(_light),\n    filter(_alpha),\n  ]\n}\n\nexport const makeHsl = (\n  settings: hslProps\n): string[] => {\n  const template = 'hsl($m, $s, $l, $a)'\n  const makeHsl = (\n    matrix: string,\n    saturation: string,\n    light: string,\n    alpha: string\n  ) =>\n    template\n      .replace('$m', matrix)\n      .replace('$s', saturation + '%')\n      .replace('$l', light + '%')\n      .replace('$a', alpha)\n  const {\n    color,\n    length,\n    position = 'middle',\n    inverse = false,\n    incMatrix = 0,\n    incSaturation = 0,\n    incLight = 0,\n    incAlpha = 0,\n    orderAlpha = false,\n    orderLight = false,\n    orderMatrix = false,\n    orderSaturation = false,\n  } = settings\n\n  const colorValues = Array.isArray(color)\n    ? color\n    : extractColorValues(color)\n\n  const textColor = Array.isArray(color)\n    ? makeHsl(\n        String(color[0]),\n        String(color[1]),\n        String(color[2]),\n        String(color[3] ?? '1')\n      )\n    : color\n\n  const resolve: any[] = []\n  let currentMatrix = String(colorValues[0])\n  let currentSaturation = String(colorValues[1])\n  let currentLight = String(colorValues[2])\n  let currentAlpha = String(colorValues[3])\n\n  if (Number.isInteger(length / 2))\n    throw new Error(\n      'você deve enviar um numero impar em \"length\"'\n    )\n\n  const resolveColor = (\n    i: number,\n    before: boolean\n  ) => {\n    const numberValues = () => {\n      const matrix = Number(currentMatrix)\n      const light = Number(currentLight)\n      const saturation = Number(currentSaturation)\n      const alpha = Number(currentAlpha)\n      return { matrix, light, saturation, alpha }\n    }\n\n    const { alpha, matrix, light, saturation } =\n      numberValues()\n\n    const context = (e: boolean) => {\n      const hanldeBefore = before ? e : !e\n      const handleInverse = inverse\n        ? !hanldeBefore\n        : hanldeBefore\n      return handleInverse\n    }\n\n    const newMatrix = getMatrix(\n      context(orderMatrix),\n      incMatrix,\n      matrix\n    )\n\n    const newSaturation = withLimit(\n      saturation,\n      incSaturation,\n      100,\n      context(orderSaturation)\n    )\n\n    const newLigth = withLimit(\n      light,\n      incLight,\n      100,\n      context(orderLight)\n    )\n\n    const newAlpha = withLimit(\n      alpha,\n      incAlpha,\n      1,\n      context(orderAlpha)\n    )\n\n    currentMatrix = newMatrix\n    currentSaturation = newSaturation\n    currentLight = newLigth\n    currentAlpha = newAlpha\n    resolve[i] = makeHsl(\n      newMatrix,\n      newSaturation,\n      newLigth,\n      newAlpha\n    )\n  }\n  const halfLength = Math.floor(length / 2)\n  switch (position) {\n    case 'start':\n      resolve[0] = textColor\n      for (let i = 1; i < length; i++) {\n        resolveColor(i, false)\n      }\n      break\n    case 'middle':\n      resolve[halfLength] = textColor // Main Color\n      for (let i = halfLength - 1; i >= 0; i--) {\n        resolveColor(i, true)\n      }\n      currentMatrix = String(colorValues[0])\n      currentSaturation = String(colorValues[1])\n      currentLight = String(colorValues[2])\n      currentAlpha = String(colorValues[3])\n      for (\n        let i = halfLength + 1;\n        i <= halfLength * 2;\n        i++\n      ) {\n        resolveColor(i, false)\n      }\n      break\n    case 'end':\n      resolve[length] = textColor\n      for (let i = length - 1; i >= 0; i--) {\n        resolveColor(i, true)\n      }\n      break\n    default:\n      console.log(\n        'você precisa escolher uma direção'\n      )\n      break\n  }\n  return resolve\n}\n","export type makeSizeProps = {\r\n  /**\r\n   * The length starts in 0\r\n   */\r\n  length: number\r\n  /**\r\n   * Increments\r\n   */\r\n  inc: number\r\n  /**\r\n   * Initial value\r\n   */\r\n  initialValue: number\r\n  /**\r\n   * type of the length, https://www.w3schools.com/css/css_units.asp\r\n   */\r\n  type: 'rem' | 'px' | 'em' | 'ms'\r\n  /**\r\n   * customize decimal place limit\r\n   */\r\n  decimalPlaces?: number\r\n}\r\n\r\nexport const makeValue = (\r\n  settings: makeSizeProps\r\n) => {\r\n  const {\r\n    length,\r\n    inc,\r\n    initialValue,\r\n    type,\r\n    decimalPlaces = 2,\r\n  } = settings\r\n  const resolve: string[] = []\r\n  for (let i = 0; i <= length; i++) {\r\n    if (i === 0) {\r\n      resolve.push(\r\n        `${String(initialValue)}${type}`\r\n      )\r\n    } else {\r\n      resolve.push(\r\n        `${String(\r\n          (\r\n            Number(\r\n              resolve[i - 1].replace(type, '')\r\n            ) + inc\r\n          ).toFixed(decimalPlaces)\r\n        )}${type}`\r\n      )\r\n    }\r\n  }\r\n  return resolve\r\n}\r\n\r\n// const yyy = makeValue({\r\n//   initialValue: 100,\r\n//   inc: 200,\r\n//   length: 30,\r\n//   type: 'ms',\r\n//   decimalPlaces: 0,\r\n// })\r\n\r\n// console.log(yyy)\r\n","import {\r\n  hslProps,\r\n  makeHsl,\r\n} from '../../utils/make-hsl'\r\nimport { makeValue } from '../../utils/make-size'\r\n\r\n// ? para fazer uma cor boa escolha bastante tons\r\n// ? hsl(matriz, saturação, brilho, alpha)\r\n// ? as cores quentes estão perto de amarelo e frias de azul\r\n// ? Cores quentes 0 <-- 250 --> 360 afastão de 250\r\n// ? Cores frias  0 --> 250 <-- 360 aproximão de 250\r\n// * 1) matriz +6 fria, brilho +20%\r\n// * 2) matriz +3 fria, brilho +10%\r\n// * 3) cor primaria\r\n// * 4) matriz +3 quente, brilho -10%\r\n// * 5) matriz +6 quente, brilho -20%\r\n// ? isso que eu desenvolvi não é uma regra, é uma ideia\r\n\r\n// ! orderm brilho --> escuro\r\n\r\ninterface AllColors {\r\n  primary: hslProps\r\n  secondary: hslProps\r\n  text: hslProps\r\n  bg: hslProps\r\n  warning: hslProps\r\n  success: hslProps\r\n  info: hslProps\r\n  black: hslProps\r\n  white: hslProps\r\n}\r\n\r\nexport const colors: AllColors = {\r\n  /**\r\n   * Length: 5\r\n   */\r\n  primary: {\r\n    color: 'hsl(53, 35%, 50%)',\r\n    length: 5,\r\n    position: 'middle',\r\n    incMatrix: 3,\r\n    incLight: 10,\r\n  },\r\n  /**\r\n   * Length: 5\r\n   */\r\n  secondary: {\r\n    color: 'hsl(296, 30%, 44%)',\r\n    length: 5,\r\n    position: 'middle',\r\n    incMatrix: 10,\r\n    incLight: 15,\r\n  },\r\n  /**\r\n   * Length: 5\r\n   */\r\n  text: {\r\n    color: 'hsl(52, 20%, 90%)',\r\n    length: 5,\r\n    position: 'start',\r\n    incMatrix: 3,\r\n    incLight: 20,\r\n    incSaturation: 5,\r\n  },\r\n  /**\r\n   * Length: 9\r\n   */\r\n  bg: {\r\n    color: 'hsl(0, 0%, 100%)',\r\n    length: 9,\r\n    position: 'start',\r\n    incLight: 11,\r\n  },\r\n  /**\r\n   * Length: 5\r\n   */\r\n  warning: {\r\n    color: 'hsl(41, 50%, 53%)',\r\n    length: 5,\r\n    position: 'middle',\r\n    incLight: 5,\r\n    incSaturation: 15,\r\n    incMatrix: 3,\r\n  },\r\n  /**\r\n   * Length: 5\r\n   */\r\n  success: {\r\n    color: 'hsl(148, 51%, 60%)',\r\n    length: 5,\r\n    position: 'middle',\r\n    incLight: 10,\r\n    incSaturation: 15,\r\n    incMatrix: 3,\r\n  },\r\n  /**\r\n   * Length: 5\r\n   */\r\n  info: {\r\n    color: 'hsl(286, 55%, 61%)',\r\n    length: 5,\r\n    position: 'middle',\r\n    incLight: 15,\r\n    incSaturation: 15,\r\n    incMatrix: 3,\r\n  },\r\n  /**\r\n   * Length: 21\r\n   */\r\n  black: {\r\n    color: 'hsl(0, 0%, 0%)',\r\n    length: 21,\r\n    position: 'start',\r\n    orderLight: true,\r\n    incLight: 5,\r\n  },\r\n  /**\r\n   * Length: 21\r\n   */\r\n  white: {\r\n    color: 'hsl(0, 0%, 100%)',\r\n    length: 21,\r\n    position: 'start',\r\n    incLight: 5,\r\n  },\r\n}\r\n\r\nexport const DefaultTheme = {\r\n  name: 'default',\r\n  /**\r\n   * color = related to the theme, _color = fixed color\r\n   */\r\n  colors: {\r\n    primary: makeHsl(colors.primary),\r\n    _primary: makeHsl(colors.primary),\r\n    secondary: makeHsl(colors.secondary),\r\n    _secondary: makeHsl(colors.secondary),\r\n    text: makeHsl(colors.text),\r\n    _text: makeHsl(colors.text),\r\n    bg: makeHsl(colors.bg),\r\n    _bg: makeHsl(colors.bg),\r\n    warning: makeHsl(colors.warning),\r\n    _warning: makeHsl(colors.warning),\r\n    success: makeHsl(colors.success),\r\n    _success: makeHsl(colors.success),\r\n    info: makeHsl(colors.info),\r\n    _info: makeHsl(colors.info),\r\n    black: makeHsl(colors.black),\r\n    _black: makeHsl(colors.black),\r\n    white: makeHsl(colors.white),\r\n    _white: makeHsl(colors.white),\r\n  },\r\n  fonts: {\r\n    family: {\r\n      default:\r\n        'Zen Dots, roboto, Open Sans, sans-serif',\r\n      secondary: \"'Montserrat', sans-serif\",\r\n    },\r\n    /**\r\n     * Length: 10\r\n     */\r\n    sizes: makeValue({\r\n      type: 'em',\r\n      inc: 0.3,\r\n      initialValue: 1,\r\n      length: 10,\r\n    }),\r\n    lineHeight: {\r\n      tiny: '1',\r\n      small: '1.2',\r\n      medium: '1.5',\r\n      large: '1.8',\r\n    },\r\n    weight: {\r\n      light: '300',\r\n      regular: '400',\r\n      semiBold: '600',\r\n      bold: '700',\r\n      extraBold: '800',\r\n    },\r\n  },\r\n  /**\r\n   * inc: 0.5\r\n   * initialValue: 0.3\r\n   * Length: 50\r\n   */\r\n  sizes: makeValue({\r\n    type: 'rem',\r\n    inc: 0.5,\r\n    initialValue: 0.3,\r\n    length: 50,\r\n  }),\r\n  media: {\r\n    /**\r\n     * screen < 320px\r\n     */\r\n    lMobileS: '(max-width: 320px)',\r\n    /**\r\n     * screen < 375px\r\n     */\r\n    lMobileM: '(max-width: 375px)',\r\n    /**\r\n     * screen < 425px\r\n     */\r\n    lMobileL: '(max-width: 425px)',\r\n    /**\r\n     * screen < 668px\r\n     */\r\n    lTabletS: '(max-width: 668px)',\r\n    /**\r\n     * screen < 768px\r\n     */\r\n    lTabletM: '(max-width: 768px)',\r\n    /**\r\n     * screen < 868px\r\n     */\r\n    lTabletL: '(max-width: 868px)',\r\n    /**\r\n     * screen < 1024px\r\n     */\r\n    lLaptopS: '(max-width: 1024px)',\r\n    /**\r\n     * screen < 1366px\r\n     */\r\n    lLaptopM: '(max-width: 1366px)',\r\n    /**\r\n     * screen < 1440px\r\n     */\r\n    lLaptopL: '(max-width: 1440px)',\r\n    /**\r\n     * screen < 1920px\r\n     */\r\n    lWide: '(max-width: 1920px)',\r\n    /**\r\n     * screen < 2560px\r\n     */\r\n    lUltraWide: '(max-width: 2560px)',\r\n    /**\r\n     * screen < 3840px\r\n     */\r\n    l4k: '(max-width: 3840px)',\r\n    /**\r\n     * screen > 320px\r\n     */\r\n    gMobileS: '(min-width: 320px)',\r\n    /**\r\n     * screen > 375px\r\n     */\r\n    gMobileM: '(min-width: 375px)',\r\n    /**\r\n     * screen > 425px\r\n     */\r\n    gMobileL: '(min-width: 425px)',\r\n    /**\r\n     * screen > 668px\r\n     */\r\n    gTabletS: '(min-width: 668px)',\r\n    /**\r\n     * screen > 768px\r\n     */\r\n    gTabletM: '(min-width: 768px)',\r\n    /**\r\n     * screen > 868px\r\n     */\r\n    gTabletL: '(min-width: 868px)',\r\n    /**\r\n     * screen > 1024px\r\n     */\r\n    gLaptopS: '(min-width: 1024px)',\r\n    /**\r\n     * screen > 1366px\r\n     */\r\n    gLaptopM: '(min-width: 1366px)',\r\n    /**\r\n     * screen > 1440px\r\n     */\r\n    gLaptopL: '(min-width: 1440px)',\r\n    /**\r\n     * screen > 1920px\r\n     */\r\n    gWide: '(min-width: 1920px)',\r\n    /**\r\n     * screen > 2560px\r\n     */\r\n    gUltraWide: '(min-width: 2560px)',\r\n    /**\r\n     * screen > 3840px\r\n     */\r\n    g4k: '(min-width: 3840px)',\r\n  },\r\n  frameSizes: {\r\n    mobileS: '20rem',\r\n    mobileM: '23.438rem',\r\n    mobileL: '26.563rem',\r\n    tabletS: '41.75rem',\r\n    tabletM: '48rem',\r\n    tabletL: '54.25rem',\r\n    laptopS: '64rem',\r\n    laptopM: '85.375rem',\r\n    laptopL: '90rem',\r\n    wide: '120rem',\r\n    ultraWide: '160rem',\r\n    u4k: '240rem',\r\n  },\r\n  /**\r\n   * Length: 30\r\n   */\r\n  transitions: makeValue({\r\n    type: 'ms',\r\n    initialValue: 100,\r\n    inc: 200,\r\n    length: 30,\r\n    decimalPlaces: 0,\r\n  }),\r\n  /**\r\n   * Length: 10\r\n   */\r\n  layers: [\r\n    '0',\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n    '9',\r\n    '10',\r\n  ],\r\n}\r\n\r\ntype Pallete = {\r\n  name: string\r\n  colors: string[]\r\n}\r\n\r\nexport const palleteColors = (() =>\r\n  Object.keys(DefaultTheme.colors).reduce<\r\n    Pallete[]\r\n  >((prev, key) => {\r\n    return [\r\n      ...prev,\r\n      {\r\n        name: key,\r\n        colors:\r\n          DefaultTheme.colors[\r\n            key as keyof typeof DefaultTheme.colors\r\n          ],\r\n      },\r\n    ]\r\n  }, []))()\r\n"],"names":["withLimit","value","increment","limit","subtraction","newLight","String","Number","isInteger","toFixed","getMatrix","hot","increments","current","after","extractColorValues","_matrix","_saturation","_light","_alpha","split","filter","replace","makeHsl","settings","template","matrix","saturation","light","alpha","color","length","position","inverse","incMatrix","incSaturation","incLight","incAlpha","orderAlpha","orderLight","orderMatrix","orderSaturation","colorValues","Array","isArray","textColor","resolve","currentMatrix","currentSaturation","currentLight","currentAlpha","Error","resolveColor","i","before","numberValues","context","e","hanldeBefore","handleInverse","newMatrix","newSaturation","newLigth","newAlpha","halfLength","Math","floor","console","log","makeValue","inc","initialValue","type","decimalPlaces","push","colors","primary","secondary","text","bg","warning","success","info","black","white","DefaultTheme","name","_primary","_secondary","_text","_bg","_warning","_success","_info","_black","_white","fonts","family","default","sizes","lineHeight","tiny","small","medium","large","weight","regular","semiBold","bold","extraBold","media","lMobileS","lMobileM","lMobileL","lTabletS","lTabletM","lTabletL","lLaptopS","lLaptopM","lLaptopL","lWide","lUltraWide","l4k","gMobileS","gMobileM","gMobileL","gTabletS","gTabletM","gTabletL","gLaptopS","gLaptopM","gLaptopL","gWide","gUltraWide","g4k","frameSizes","mobileS","mobileM","mobileL","tabletS","tabletM","tabletL","laptopS","laptopM","laptopL","wide","ultraWide","u4k","transitions","layers","Object","keys","reduce","prev","key"],"mappings":"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"}